
IMPORTANTE:
    ☐ Añadir siempre un background blanco porque si no, cargara el pdf en negro
    Para la base de datos leer este post de stackoverflow
    https://stackoverflow.com/questions/37652801/when-to-use-interface-and-model-in-typescript-angular2
    ☐ Como hay que hacer las consultas
    Da igual que el framework sea vue, se aplica tambien a angular
    https://github.com/vuejs/vuefire/issues/18#issuecomment-230316022
    https://basarat.gitbooks.io/typescript/docs/promise.html
TODO:
    ✔ Añadido html2canvas por si en algun futuro lo necestio aunque no tiene tiene pinta ya que con jquery y jspdf va de sobra @done(18-10-19 19:31)
    ✔ Arreglado el problema con los pdfs @done(18-10-21 11:02)
        La libreria que hay que usar es la de jspdf.debug
    ☐ Añadir firebase para guardar las facturas generadas @started(18-10-21 13:15)
        Super importante la documentacion de la api 
        https://firebase.google.com/docs/reference/js/firebase.auth.Auth
        ☐ Aprendiendo a usar firebase desde la guia oficial
        https://firebase.google.com/docs/web/setup?hl=es-419
        Mas documentos --> https://firebase.google.com/docs/reference/node/
        ✔ Añadido npm firebase-admin @done(18-10-21 13:26)
        https://www.npmjs.com/package/firebase-admin
        ✔ Añadido npm firebase @done(18-10-21 13:45)
        https://www.npmjs.com/package/firebase
        ✔ Añadido npm expressjs/cors/body-parser/nodemon @done(18-10-21 16:52)
    ☐ Hacer auth
    ☐ Una vez completado la fase auth seguir este doc
        https://firebase.google.com/docs/firestore/quickstart
    ☐ Añadir angular material para los inputs.
    ☐ Crear los objectos factura,direccion etc...
    ☐ Crear una buena estructura de directorios
    ☐ Cuando se cree el pdf hacerlo con un ancho y un alto como los pdf normales
    ☐ Hacer buenas interfaces y objetos

    Posibles extras:
        ☐ Guarda facturas.
        ☐ Listado de facturas.
        ☐ Guardar facturas en firebase
